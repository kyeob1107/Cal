<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="backspaceButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        CC5+evs/0ojYfEGZTDsAAAAASUVORK5CYII=
</value>
  </data>
</root>